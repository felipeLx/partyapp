{"ast":null,"code":"var _jsxFileName = \"/home/felipelx/Desktop/workspace/NodeJs/server-front/client/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\nimport registerServiceWorker from './registerServiceWorker'; // import authReducer from './store/reducers/auth'; \n// import errorReducer from './store/reducers/errorReducer'; \n\nimport { watchAuth } from './store/sagas';\nimport jwt_decode from \"jwt-decode\"; // import setAuthToken from \"./shared/setAuthToken\";\n\nimport { setCurrentUser, logoutUser } from \"./store/actions/auth\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose; // const rootReducer = combineReducers({\n//   auth: authReducer,\n// });\n// const sagaMiddleware = createSagaMiddleware();\n// const store = createStore(rootReducer, composeEnhancers(\n//     applyMiddleware(thunk, sagaMiddleware)\n// ));\n// sagaMiddleware.run(watchAuth);\n// if (localStorage.jwtToken) {\n//   // Set auth token header auth\n//   const token = localStorage.jwtToken;\n//   // setAuthToken(token);\n//   // Decode token and get user info and exp\n//   const decoded = jwt_decode(token);\n//   // Set user and isAuthenticated\n//   store.dispatch(setCurrentUser(decoded));\n//   // Check for expired token\n//   const currentTime = Date.now() / 1000; // to get in milliseconds\n//   if (decoded.exp < currentTime) {\n//     // Logout user\n//     store.dispatch(logoutUser());\n//     // Redirect to login\n//     window.location.href = \"./login\";\n//   }\n// }\n\nconst app = /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(BrowserRouter, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 7\n  }\n})));\nReactDOM.render(app, document.getElementById('root'));\nregisterServiceWorker();","map":{"version":3,"sources":["/home/felipelx/Desktop/workspace/NodeJs/server-front/client/src/index.js"],"names":["React","ReactDOM","BrowserRouter","Provider","createStore","applyMiddleware","compose","combineReducers","thunk","createSagaMiddleware","registerServiceWorker","watchAuth","jwt_decode","setCurrentUser","logoutUser","App","serviceWorker","composeEnhancers","process","env","NODE_ENV","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","app","store","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,EAAgDC,eAAhD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,qBAAP,MAAkC,yBAAlC,C,CACA;AACA;;AACA,SAASC,SAAT,QAA0B,eAA1B;AAEA,OAAOC,UAAP,MAAuB,YAAvB,C,CACA;;AACA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,sBAA3C;AAEA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEA,MAAMC,gBAAgB,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GAAyCC,MAAM,CAACC,oCAAhD,GAAuF,QAAQhB,OAAxH,C,CAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMiB,GAAG,gBACP,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF;AAQAvB,QAAQ,CAACwB,MAAT,CACEF,GADF,EAEEG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF;AAKAjB,qBAAqB","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\n\nimport registerServiceWorker from './registerServiceWorker';\n// import authReducer from './store/reducers/auth'; \n// import errorReducer from './store/reducers/errorReducer'; \nimport { watchAuth } from './store/sagas';\n\nimport jwt_decode from \"jwt-decode\";\n// import setAuthToken from \"./shared/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./store/actions/auth\";\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\n// const rootReducer = combineReducers({\n//   auth: authReducer,\n  \n// });\n\n// const sagaMiddleware = createSagaMiddleware();\n\n// const store = createStore(rootReducer, composeEnhancers(\n//     applyMiddleware(thunk, sagaMiddleware)\n// ));\n\n// sagaMiddleware.run(watchAuth);\n\n// if (localStorage.jwtToken) {\n//   // Set auth token header auth\n//   const token = localStorage.jwtToken;\n//   // setAuthToken(token);\n//   // Decode token and get user info and exp\n//   const decoded = jwt_decode(token);\n//   // Set user and isAuthenticated\n//   store.dispatch(setCurrentUser(decoded));\n//   // Check for expired token\n//   const currentTime = Date.now() / 1000; // to get in milliseconds\n//   if (decoded.exp < currentTime) {\n//     // Logout user\n//     store.dispatch(logoutUser());\n//     // Redirect to login\n//     window.location.href = \"./login\";\n//   }\n// }\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(\n  app,\n  document.getElementById('root')\n);\n\nregisterServiceWorker();"]},"metadata":{},"sourceType":"module"}