{"ast":null,"code":"var _jsxFileName = \"/home/felipelx/Desktop/workspace/NodeJs/server-front/client/src/containers/Auth/Login.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Register from '../../components/Register/Register';\nimport Input from '../../components/UI/Input/Input';\nimport Button from '../../components/UI/Button/Button';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport classes from './Auth.module.css';\nimport * as actions from '../../store/actions/index';\nimport { updateObject, checkValidity } from '../../shared/utility';\nconst login = React.memo(props => {\n  const [controls, setControls] = useState({\n    email: {\n      elementType: 'input',\n      elementConfig: {\n        type: 'email',\n        placeholder: 'Mail Address'\n      },\n      value: '',\n      validation: {\n        required: true,\n        isEmail: true\n      },\n      valid: false,\n      touched: false\n    },\n    password: {\n      elementType: 'input',\n      elementConfig: {\n        type: 'password',\n        placeholder: 'Password'\n      },\n      value: '',\n      validation: {\n        required: true,\n        minLength: 6\n      },\n      valid: false,\n      touched: false\n    }\n  });\n  const [authenticated, setAuthenticated] = useState(false);\n  const {\n    auth,\n    errors,\n    loginUser\n  } = props;\n  useEffect(() => {\n    // console.log(nextProps);\n    console.log(props);\n\n    if (props.auth.isAuthenticated) {\n      props.history.push(\"/register\" + props.match.params.id);\n    }\n  }, []);\n\n  const inputChangedHandler = (event, controlName) => {\n    const updatedControls = updateObject(controls, {\n      [controlName]: updateObject(controls[controlName], {\n        value: event.target.value,\n        valid: checkValidity(event.target.value, controls[controlName].validation),\n        touched: true\n      })\n    });\n    setControls(updatedControls);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    setAuthenticated(true);\n    const userData = {\n      username: constrols.username.value,\n      password: user.password\n    };\n    props.onAuth(controls.email.value, controls.password.value, isSignup);\n    props.loginUser(userData);\n  };\n\n  const formElementsArray = [];\n\n  for (let key in controls) {\n    formElementsArray.push({\n      id: key,\n      config: controls[key]\n    });\n  }\n\n  let form = formElementsArray.map(formElement => /*#__PURE__*/React.createElement(Input, {\n    key: formElement.id,\n    elementType: formElement.config.elementType,\n    elementConfig: formElement.config.elementConfig,\n    value: formElement.config.value,\n    invalid: !formElement.config.valid,\n    shouldValidate: formElement.config.validation,\n    touched: formElement.config.touched,\n    changed: event => inputChangedHandler(event, formElement.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }));\n\n  if (props.loading) {\n    form = /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 20\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"4rem\",\n      paddingTop: \"70px\"\n    },\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col s8 offset-s2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    className: \"btn-flat waves-effect\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, \"keyboard_backspace\"), \" Voltar a Home\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col s12\",\n    style: {\n      paddingLeft: \"11.250px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, \"Login\"), \" abaixo\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"grey-text text-darken-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, \"Ainda n\\xE3o tem uma conta? \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/auth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 42\n    }\n  }, \"Registrar\"))), /*#__PURE__*/React.createElement(\"form\", {\n    noValidate: true,\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field col s12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, form), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col s12\",\n    style: {\n      paddingLeft: \"11.250px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    btnType: \"Success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, \"SUBMIT\"))))), authenticated ? /*#__PURE__*/React.createElement(Register, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 26\n    }\n  }) : null);\n});\nlogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  error: PropTypes.object.isRequired\n}; // const mapStateToProps = state => {\n//  return (\n//   auth: state.auth,\n//   errors: state.errors,\n//   loginUser: state.loginUser\n//   )\n// };\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    isAuthenticated: state.auth.token !== null,\n    registerRedirectPath: state.auth.registerRedirectPath,\n    loginUser: state.auth.userId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (email, password, isSignup) => dispatch(actions.auth(email, password, isSignup)),\n    onSetRegisterRedirectPath: () => dispatch(actions.setRegisterRedirectPath('/register/'))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(login);","map":{"version":3,"sources":["/home/felipelx/Desktop/workspace/NodeJs/server-front/client/src/containers/Auth/Login.js"],"names":["React","useState","useEffect","connect","PropTypes","Link","withRouter","Register","Input","Button","Spinner","classes","actions","updateObject","checkValidity","login","memo","props","controls","setControls","email","elementType","elementConfig","type","placeholder","value","validation","required","isEmail","valid","touched","password","minLength","authenticated","setAuthenticated","auth","errors","loginUser","console","log","isAuthenticated","history","push","match","params","id","inputChangedHandler","event","controlName","updatedControls","target","submitHandler","preventDefault","userData","username","constrols","user","onAuth","isSignup","formElementsArray","key","config","form","map","formElement","loading","marginTop","paddingTop","paddingLeft","propTypes","func","isRequired","object","error","mapStateToProps","state","token","registerRedirectPath","userId","mapDispatchToProps","dispatch","onSetRegisterRedirectPath","setRegisterRedirectPath"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,OAAOC,QAAP,MAAqB,oCAArB;AAEA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,sBAA5C;AAEA,MAAMC,KAAK,GAAGf,KAAK,CAACgB,IAAN,CAAWC,KAAK,IAAI;AAC9B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC;AACvCmB,IAAAA,KAAK,EAAE;AACLC,MAAAA,WAAW,EAAE,OADR;AAELC,MAAAA,aAAa,EAAE;AACXC,QAAAA,IAAI,EAAE,OADK;AAEXC,QAAAA,WAAW,EAAE;AAFF,OAFV;AAMLC,MAAAA,KAAK,EAAE,EANF;AAOLC,MAAAA,UAAU,EAAE;AACRC,QAAAA,QAAQ,EAAE,IADF;AAERC,QAAAA,OAAO,EAAE;AAFD,OAPP;AAWLC,MAAAA,KAAK,EAAE,KAXF;AAYLC,MAAAA,OAAO,EAAE;AAZJ,KADgC;AAevCC,IAAAA,QAAQ,EAAE;AACNV,MAAAA,WAAW,EAAE,OADP;AAENC,MAAAA,aAAa,EAAE;AACXC,QAAAA,IAAI,EAAE,UADK;AAEXC,QAAAA,WAAW,EAAE;AAFF,OAFT;AAMNC,MAAAA,KAAK,EAAE,EAND;AAONC,MAAAA,UAAU,EAAE;AACRC,QAAAA,QAAQ,EAAE,IADF;AAERK,QAAAA,SAAS,EAAE;AAFH,OAPN;AAWNH,MAAAA,KAAK,EAAE,KAXD;AAYNC,MAAAA,OAAO,EAAE;AAZH;AAf6B,GAAD,CAAxC;AAgCA,QAAM,CAACG,aAAD,EAAgBC,gBAAhB,IAAoCjC,QAAQ,CAAC,KAAD,CAAlD;AAEA,QAAM;AAAEkC,IAAAA,IAAF;AAAQC,IAAAA,MAAR;AAAgBC,IAAAA;AAAhB,MAA8BpB,KAApC;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACd;AACAoC,IAAAA,OAAO,CAACC,GAAR,CAAYtB,KAAZ;;AAEA,QAAIA,KAAK,CAACkB,IAAN,CAAWK,eAAf,EAAgC;AAC9BvB,MAAAA,KAAK,CAACwB,OAAN,CAAcC,IAAd,CAAmB,cAAczB,KAAK,CAAC0B,KAAN,CAAYC,MAAZ,CAAmBC,EAApD;AACD;AAEF,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMC,mBAAmB,GAAG,CAAEC,KAAF,EAASC,WAAT,KAA0B;AACpD,UAAMC,eAAe,GAAGpC,YAAY,CAAEK,QAAF,EAAY;AAC5C,OAAC8B,WAAD,GAAenC,YAAY,CAAEK,QAAQ,CAAC8B,WAAD,CAAV,EAAyB;AAChDvB,QAAAA,KAAK,EAAEsB,KAAK,CAACG,MAAN,CAAazB,KAD4B;AAEhDI,QAAAA,KAAK,EAAEf,aAAa,CAAEiC,KAAK,CAACG,MAAN,CAAazB,KAAf,EAAsBP,QAAQ,CAAC8B,WAAD,CAAR,CAAsBtB,UAA5C,CAF4B;AAGhDI,QAAAA,OAAO,EAAE;AAHuC,OAAzB;AADiB,KAAZ,CAApC;AAOAX,IAAAA,WAAW,CAAC8B,eAAD,CAAX;AACH,GATC;;AAWA,QAAME,aAAa,GAAIJ,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACK,cAAN;AACAlB,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACA,UAAMmB,QAAQ,GAAG;AAAEC,MAAAA,QAAQ,EAAEC,SAAS,CAACD,QAAV,CAAmB7B,KAA/B;AAAsCM,MAAAA,QAAQ,EAAEyB,IAAI,CAACzB;AAArD,KAAjB;AACAd,IAAAA,KAAK,CAACwC,MAAN,CAAcvC,QAAQ,CAACE,KAAT,CAAeK,KAA7B,EAAoCP,QAAQ,CAACa,QAAT,CAAkBN,KAAtD,EAA6DiC,QAA7D;AACAzC,IAAAA,KAAK,CAACoB,SAAN,CAAgBgB,QAAhB;AACH,GAND;;AAQA,QAAMM,iBAAiB,GAAG,EAA1B;;AACI,OAAM,IAAIC,GAAV,IAAiB1C,QAAjB,EAA4B;AACxByC,IAAAA,iBAAiB,CAACjB,IAAlB,CAAwB;AACpBG,MAAAA,EAAE,EAAEe,GADgB;AAEpBC,MAAAA,MAAM,EAAE3C,QAAQ,CAAC0C,GAAD;AAFI,KAAxB;AAIH;;AAED,MAAIE,IAAI,GAAGH,iBAAiB,CAACI,GAAlB,CAAuBC,WAAW,iBACzC,oBAAC,KAAD;AACI,IAAA,GAAG,EAAEA,WAAW,CAACnB,EADrB;AAEI,IAAA,WAAW,EAAEmB,WAAW,CAACH,MAAZ,CAAmBxC,WAFpC;AAGI,IAAA,aAAa,EAAE2C,WAAW,CAACH,MAAZ,CAAmBvC,aAHtC;AAII,IAAA,KAAK,EAAE0C,WAAW,CAACH,MAAZ,CAAmBpC,KAJ9B;AAKI,IAAA,OAAO,EAAE,CAACuC,WAAW,CAACH,MAAZ,CAAmBhC,KALjC;AAMI,IAAA,cAAc,EAAEmC,WAAW,CAACH,MAAZ,CAAmBnC,UANvC;AAOI,IAAA,OAAO,EAAEsC,WAAW,CAACH,MAAZ,CAAmB/B,OAPhC;AAQI,IAAA,OAAO,EAAIiB,KAAF,IAAaD,mBAAmB,CAAEC,KAAF,EAASiB,WAAW,CAACnB,EAArB,CAR7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,CAAX;;AAYA,MAAK5B,KAAK,CAACgD,OAAX,EAAqB;AACjBH,IAAAA,IAAI,gBAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAEL,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAE;AAAEI,MAAAA,SAAS,EAAE,MAAb;AAAqBC,MAAAA,UAAU,EAAE;AAAjC,KAAZ;AAAuD,IAAA,SAAS,EAAC,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAa,IAAA,SAAS,EAAC,uBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,mBADF,eAIE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAyB,IAAA,KAAK,EAAE;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,YADF,eAIE;AAAG,IAAA,SAAS,EAAC,yBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAC2B,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAD3B,CAJF,CAJF,eAYE;AAAM,IAAA,UAAU,MAAhB;AAAiB,IAAA,QAAQ,EAAEjB,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGW,IADH,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAyB,IAAA,KAAK,EAAE;AAAEM,MAAAA,WAAW,EAAE;AAAf,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,CAJF,CAZF,CADF,CADF,EAwBGnC,aAAa,gBAAG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAkB,IAxBlC,CADF;AA4BH,CAtHa,CAAd;AAwHAlB,KAAK,CAACsD,SAAN,GAAkB;AAChBhC,EAAAA,SAAS,EAAEjC,SAAS,CAACkE,IAAV,CAAeC,UADV;AAEhBpC,EAAAA,IAAI,EAAE/B,SAAS,CAACoE,MAAV,CAAiBD,UAFP;AAGhBE,EAAAA,KAAK,EAAErE,SAAS,CAACoE,MAAV,CAAiBD;AAHR,CAAlB,C,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMG,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACHV,IAAAA,OAAO,EAAEU,KAAK,CAACxC,IAAN,CAAW8B,OADjB;AAEHQ,IAAAA,KAAK,EAAEE,KAAK,CAACxC,IAAN,CAAWsC,KAFf;AAGHjC,IAAAA,eAAe,EAAEmC,KAAK,CAACxC,IAAN,CAAWyC,KAAX,KAAqB,IAHnC;AAIHC,IAAAA,oBAAoB,EAAEF,KAAK,CAACxC,IAAN,CAAW0C,oBAJ9B;AAKHxC,IAAAA,SAAS,EAAEsC,KAAK,CAACxC,IAAN,CAAW2C;AALnB,GAAP;AAOD,CARD;;AAUA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACHvB,IAAAA,MAAM,EAAE,CAAErC,KAAF,EAASW,QAAT,EAAmB2B,QAAnB,KAAiCsB,QAAQ,CAAEpE,OAAO,CAACuB,IAAR,CAAcf,KAAd,EAAqBW,QAArB,EAA+B2B,QAA/B,CAAF,CAD9C;AAEHuB,IAAAA,yBAAyB,EAAE,MAAMD,QAAQ,CAAEpE,OAAO,CAACsE,uBAAR,CAAiC,YAAjC,CAAF;AAFtC,GAAP;AAID,CALD;;AAOA,eAAe/E,OAAO,CAACuE,eAAD,EAAkBK,kBAAlB,CAAP,CAA6ChE,KAA7C,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Register from '../../components/Register/Register';\n\nimport Input from '../../components/UI/Input/Input';\nimport Button from '../../components/UI/Button/Button';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport classes from './Auth.module.css';\nimport * as actions from '../../store/actions/index';\nimport { updateObject, checkValidity } from '../../shared/utility';\n\nconst login = React.memo(props => {\n    const [controls, setControls] = useState({\n      email: {\n        elementType: 'input',\n        elementConfig: {\n            type: 'email',\n            placeholder: 'Mail Address'\n        },\n        value: '',\n        validation: {\n            required: true,\n            isEmail: true\n        },\n        valid: false,\n        touched: false\n      },\n      password: {\n          elementType: 'input',\n          elementConfig: {\n              type: 'password',\n              placeholder: 'Password'\n          },\n          value: '',\n          validation: {\n              required: true,\n              minLength: 6\n          },\n          valid: false,\n          touched: false\n      }\n    });\n   \n\n    const [authenticated, setAuthenticated] = useState(false);\n\n    const { auth, errors, loginUser } = props;\n\n    useEffect(() => {\n      // console.log(nextProps);\n      console.log(props);\n      \n      if (props.auth.isAuthenticated) {\n        props.history.push(\"/register\" + props.match.params.id);\n      }\n\n    }, [])\n\n    const inputChangedHandler = ( event, controlName ) => {\n      const updatedControls = updateObject( controls, {\n          [controlName]: updateObject( controls[controlName], {\n              value: event.target.value,\n              valid: checkValidity( event.target.value, controls[controlName].validation ),\n              touched: true\n          } )\n      } );\n      setControls(updatedControls);\n  }\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n        setAuthenticated(true);\n        const userData = { username: constrols.username.value, password: user.password};\n        props.onAuth( controls.email.value, controls.password.value, isSignup );\n        props.loginUser(userData);\n    };\n\n    const formElementsArray = [];\n        for ( let key in controls ) {\n            formElementsArray.push( {\n                id: key,\n                config: controls[key]\n            } );\n        }\n\n        let form = formElementsArray.map( formElement => (\n            <Input\n                key={formElement.id}\n                elementType={formElement.config.elementType}\n                elementConfig={formElement.config.elementConfig}\n                value={formElement.config.value}\n                invalid={!formElement.config.valid}\n                shouldValidate={formElement.config.validation}\n                touched={formElement.config.touched}\n                changed={( event ) => inputChangedHandler( event, formElement.id )} />\n        ) );\n\n        if ( props.loading ) {\n            form = <Spinner />\n        }\n\n    return (\n      <div className=\"container\">\n        <div style={{ marginTop: \"4rem\", paddingTop: \"70px\" }} className=\"row\">\n          <div className=\"col s8 offset-s2\">\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\n              <i className=\"material-icons left\">keyboard_backspace</i> Voltar a Home\n            </Link>\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4>\n                <b>Login</b> abaixo\n              </h4>\n              <p className=\"grey-text text-darken-1\">\n                Ainda não tem uma conta? <Link to=\"/auth\">Registrar</Link>\n              </p>\n            </div>\n            <form noValidate onSubmit={submitHandler}>\n              <div className=\"input-field col s12\">\n                {form}\n              </div>\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <Button btnType=\"Success\">SUBMIT</Button>\n              </div>\n            </form>\n          </div>\n        </div>\n        {authenticated ? <Register /> : null}\n      </div>\n    );\n});\n\nlogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  error: PropTypes.object.isRequired\n};\n\n// const mapStateToProps = state => {\n//  return (\n//   auth: state.auth,\n//   errors: state.errors,\n//   loginUser: state.loginUser\n//   )\n// };\n\nconst mapStateToProps = state => {\n  return {\n      loading: state.auth.loading,\n      error: state.auth.error,\n      isAuthenticated: state.auth.token !== null,\n      registerRedirectPath: state.auth.registerRedirectPath,\n      loginUser: state.auth.userId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n      onAuth: ( email, password, isSignup ) => dispatch( actions.auth( email, password, isSignup ) ),\n      onSetRegisterRedirectPath: () => dispatch( actions.setRegisterRedirectPath( '/register/' ) )\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(login);"]},"metadata":{},"sourceType":"module"}