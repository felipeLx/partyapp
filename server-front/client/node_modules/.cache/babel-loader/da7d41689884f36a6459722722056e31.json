{"ast":null,"code":"var _jsxFileName = \"/home/felipelx/Desktop/workspace/NodeJs/server-front/client/src/components/PrivateRoute/PrivateRoute.js\";\nimport React, { useState, useEffect, Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { Form, Col, Button } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\nconst privateRoute = ({\n  component: Component,\n  auth,\n  ...rest\n}) => /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n  render: props => auth.isAuthenticated === true ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }\n}));\n\nprivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(privateRoute);","map":{"version":3,"sources":["/home/felipelx/Desktop/workspace/NodeJs/server-front/client/src/components/PrivateRoute/PrivateRoute.js"],"names":["React","useState","useEffect","Component","connect","Route","Redirect","Form","Col","Button","PropTypes","privateRoute","component","auth","rest","props","isAuthenticated","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,MAApB,QAAkC,iBAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAET,SAAZ;AAAuBU,EAAAA,IAAvB;AAA6B,KAAGC;AAAhC,CAAD,kBAEjB,oBAAC,KAAD,oBACQA,IADR;AAEI,EAAA,MAAM,EAAIC,KAAK,IAAIF,IAAI,CAACG,eAAL,KAAyB,IAAzB,gBACf,oBAAC,SAAD,oBAAeD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADe,gBAGf,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAFJ;;AAaAJ,YAAY,CAACM,SAAb,GAAyB;AACrBJ,EAAAA,IAAI,EAAEH,SAAS,CAACQ,MAAV,CAAiBC;AADF,CAAzB;;AAGE,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCR,EAAAA,IAAI,EAAEQ,KAAK,CAACR;AADoB,CAAL,CAA7B;;AAGA,eAAeT,OAAO,CAACgB,eAAD,CAAP,CAAyBT,YAAzB,CAAf","sourcesContent":["import React, { useState, useEffect, Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { Form, Col, Button } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\nconst privateRoute = ({component: Component, auth, ...rest}) => (\n\n    <Route\n        {...rest}\n        render = {props => auth.isAuthenticated === true ? (\n            <Component {...props} />\n        ) : (\n            <Redirect to=\"/login\" />\n        )\n        }    \n     />\n);\n\nprivateRoute.propTypes = {\n    auth: PropTypes.object.isRequired\n  };\n  const mapStateToProps = state => ({\n    auth: state.auth\n  });\n  export default connect(mapStateToProps)(privateRoute);"]},"metadata":{},"sourceType":"module"}