{"ast":null,"code":"var _jsxFileName = \"/home/felipelx/Desktop/workspace/NodeJs/server-front/client/src/hoc/Layout/Layout.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport Aux from '../Aux/Aux';\nimport classes from './Layout.module.css';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\nconst layout = React.memo(props => {\n  const [showSideDrawer, setShowSideDrawer] = useState(false);\n\n  const sideDrawerClosedHandler = () => {\n    setShowSideDrawer(false);\n  };\n\n  const sideDrawerToggleHandler = () => {\n    setShowSideDrawer(!showSideDrawer);\n  };\n\n  return /*#__PURE__*/React.createElement(Aux, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar // id={props.match.params.id}\n  , {\n    isAuth: props.isAuthenticated,\n    drawerToggleClicked: sideDrawerToggleHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(SideDrawer // id={props.match.params.id}\n  , {\n    isAuth: props.isAuthenticated,\n    open: showSideDrawer,\n    closed: sideDrawerClosedHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"main\", {\n    className: classes.Content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, props.children));\n});\n\nconst mapStateToPropst = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nexport default connect(mapStateToPropst)(layout);","map":{"version":3,"sources":["/home/felipelx/Desktop/workspace/NodeJs/server-front/client/src/hoc/Layout/Layout.js"],"names":["React","useState","connect","Aux","classes","Toolbar","SideDrawer","layout","memo","props","showSideDrawer","setShowSideDrawer","sideDrawerClosedHandler","sideDrawerToggleHandler","isAuthenticated","Content","children","mapStateToPropst","state","auth","token"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,OAAP,MAAoB,6CAApB;AACA,OAAOC,UAAP,MAAuB,mDAAvB;AAEA,MAAMC,MAAM,GAAGP,KAAK,CAACQ,IAAN,CAAWC,KAAK,IAAI;AAC/B,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC,KAAD,CAApD;;AAEA,QAAMW,uBAAuB,GAAG,MAAM;AAClCD,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH,GAFD;;AAIA,QAAME,uBAAuB,GAAG,MAAM;AAClCF,IAAAA,iBAAiB,CAAC,CAACD,cAAF,CAAjB;AACH,GAFD;;AAII,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD,CACI;AADJ;AAEI,IAAA,MAAM,EAAED,KAAK,CAACK,eAFlB;AAGI,IAAA,mBAAmB,EAAED,uBAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAKI,oBAAC,UAAD,CACI;AADJ;AAEI,IAAA,MAAM,EAAEJ,KAAK,CAACK,eAFlB;AAGI,IAAA,IAAI,EAAEJ,cAHV;AAII,IAAA,MAAM,EAAEE,uBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,eAUI;AAAM,IAAA,SAAS,EAAER,OAAO,CAACW,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,KAAK,CAACO,QADX,CAVJ,CADJ;AAgBP,CA3Bc,CAAf;;AA6BA,MAAMC,gBAAgB,GAAGC,KAAK,IAAI;AAC9B,SAAO;AACHJ,IAAAA,eAAe,EAAEI,KAAK,CAACC,IAAN,CAAWC,KAAX,KAAqB;AADnC,GAAP;AAGH,CAJD;;AAMA,eAAelB,OAAO,CAAEe,gBAAF,CAAP,CAA4BV,MAA5B,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport Aux from '../Aux/Aux';\nimport classes from './Layout.module.css';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\n\nconst layout = React.memo(props => {\n    const [showSideDrawer, setShowSideDrawer] = useState(false);\n\n    const sideDrawerClosedHandler = () => {\n        setShowSideDrawer(false);\n    }\n\n    const sideDrawerToggleHandler = () => {\n        setShowSideDrawer(!showSideDrawer);\n    }\n\n        return (\n            <Aux>\n                <Toolbar\n                    // id={props.match.params.id}\n                    isAuth={props.isAuthenticated} \n                    drawerToggleClicked={sideDrawerToggleHandler} />\n                <SideDrawer\n                    // id={props.match.params.id}\n                    isAuth={props.isAuthenticated} \n                    open={showSideDrawer}\n                    closed={sideDrawerClosedHandler} />\n                <main className={classes.Content}>\n                    {props.children}\n                </main>\n            </Aux>\n        )\n});\n\nconst mapStateToPropst = state => {\n    return {\n        isAuthenticated: state.auth.token !== null\n    };\n};\n\nexport default connect (mapStateToPropst) (layout);"]},"metadata":{},"sourceType":"module"}