{"ast":null,"code":"var _jsxFileName = \"/home/felipelx/Desktop/workspace/NodeJs/server-front/client/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\nimport registerServiceWorker from './registerServiceWorker';\nimport authReducer from './store/reducers/authReducer';\nimport errorReducer from './store/reducers/errorReducer';\nimport { watchAuth } from './store/sagas';\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./store/actions/auth\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\nconst rootReducer = combineReducers({\n  auth: authReducer\n});\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk, sagaMiddleware)));\nsagaMiddleware.run(watchAuth);\n\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token); // Decode token and get user info and exp\n\n  const decoded = jwt_decode(token); // Set user and isAuthenticated\n\n  store.dispatch(setCurrentUser(decoded)); // Check for expired token\n\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser()); // Redirect to login\n\n    window.location.href = \"./login\";\n  }\n}\n\nconst app = /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(BrowserRouter, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 7\n  }\n})));\nReactDOM.render(app, document.getElementById('root'));\nregisterServiceWorker();","map":{"version":3,"sources":["/home/felipelx/Desktop/workspace/NodeJs/server-front/client/src/index.js"],"names":["React","ReactDOM","BrowserRouter","Provider","createStore","applyMiddleware","compose","combineReducers","thunk","createSagaMiddleware","registerServiceWorker","authReducer","errorReducer","watchAuth","jwt_decode","setAuthToken","setCurrentUser","logoutUser","App","serviceWorker","composeEnhancers","process","env","NODE_ENV","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","rootReducer","auth","sagaMiddleware","store","run","localStorage","jwtToken","token","decoded","dispatch","currentTime","Date","now","exp","location","href","app","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,EAAgDC,eAAhD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SAASC,SAAT,QAA0B,eAA1B;AAEA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,sBAA3C;AAEA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEA,MAAMC,gBAAgB,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GAAyCC,MAAM,CAACC,oCAAhD,GAAuF,QAAQnB,OAAxH;AAEA,MAAMoB,WAAW,GAAGnB,eAAe,CAAC;AAClCoB,EAAAA,IAAI,EAAEhB;AAD4B,CAAD,CAAnC;AAKA,MAAMiB,cAAc,GAAGnB,oBAAoB,EAA3C;AAEA,MAAMoB,KAAK,GAAGzB,WAAW,CAACsB,WAAD,EAAcN,gBAAgB,CACnDf,eAAe,CAACG,KAAD,EAAQoB,cAAR,CADoC,CAA9B,CAAzB;AAIAA,cAAc,CAACE,GAAf,CAAmBjB,SAAnB;;AAEA,IAAIkB,YAAY,CAACC,QAAjB,EAA2B;AACzB;AACA,QAAMC,KAAK,GAAGF,YAAY,CAACC,QAA3B;AACAjB,EAAAA,YAAY,CAACkB,KAAD,CAAZ,CAHyB,CAIzB;;AACA,QAAMC,OAAO,GAAGpB,UAAU,CAACmB,KAAD,CAA1B,CALyB,CAMzB;;AACAJ,EAAAA,KAAK,CAACM,QAAN,CAAenB,cAAc,CAACkB,OAAD,CAA7B,EAPyB,CAQzB;;AACA,QAAME,WAAW,GAAGC,IAAI,CAACC,GAAL,KAAa,IAAjC,CATyB,CASc;;AACvC,MAAIJ,OAAO,CAACK,GAAR,GAAcH,WAAlB,EAA+B;AAC7B;AACAP,IAAAA,KAAK,CAACM,QAAN,CAAelB,UAAU,EAAzB,EAF6B,CAG7B;;AACAO,IAAAA,MAAM,CAACgB,QAAP,CAAgBC,IAAhB,GAAuB,SAAvB;AACD;AACF;;AAED,MAAMC,GAAG,gBACP,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEb,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF;AAQA5B,QAAQ,CAAC0C,MAAT,CACED,GADF,EAEEE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF;AAKAnC,qBAAqB","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\n\nimport registerServiceWorker from './registerServiceWorker';\nimport authReducer from './store/reducers/authReducer'; \nimport errorReducer from './store/reducers/errorReducer'; \nimport { watchAuth } from './store/sagas';\n\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./store/actions/auth\";\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  \n});\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk, sagaMiddleware)\n));\n\nsagaMiddleware.run(watchAuth);\n\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n  // Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n    // Redirect to login\n    window.location.href = \"./login\";\n  }\n}\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(\n  app,\n  document.getElementById('root')\n);\n\nregisterServiceWorker();"]},"metadata":{},"sourceType":"module"}